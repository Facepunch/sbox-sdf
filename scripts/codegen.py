output = []
output.append("//")
output.append("// PLEASE DO NOT EDIT!!")
output.append("// This file was generated by scripts/codegen.py, go edit that instead!")
output.append("//")
output.append("")
output.append("namespace Sandbox.Sdf;")
output.append("")
output.append("partial class Sdf3DMeshWriter")
output.append("{")
output.append("\tpartial void AddTriangles( in Sdf3DArrayData data, int x, int y, int z )")
output.append("\t{")
output.append("\t\tvar aRaw = data[x + 0, y + 0, z + 0];")
output.append("\t\tvar bRaw = data[x + 1, y + 0, z + 0];")
output.append("\t\tvar cRaw = data[x + 0, y + 1, z + 0];")
output.append("\t\tvar dRaw = data[x + 1, y + 1, z + 0];")
output.append("")
output.append("\t\tvar eRaw = data[x + 0, y + 0, z + 1];")
output.append("\t\tvar fRaw = data[x + 1, y + 0, z + 1];")
output.append("\t\tvar gRaw = data[x + 0, y + 1, z + 1];")
output.append("\t\tvar hRaw = data[x + 1, y + 1, z + 1];")
output.append("")
output.append("\t\tvar a = aRaw < 128 ? CubeConfiguration.A : 0;")
output.append("\t\tvar b = bRaw < 128 ? CubeConfiguration.B : 0;")
output.append("\t\tvar c = cRaw < 128 ? CubeConfiguration.C : 0;")
output.append("\t\tvar d = dRaw < 128 ? CubeConfiguration.D : 0;")
output.append("")
output.append("\t\tvar e = eRaw < 128 ? CubeConfiguration.A : 0;")
output.append("\t\tvar f = fRaw < 128 ? CubeConfiguration.B : 0;")
output.append("\t\tvar g = gRaw < 128 ? CubeConfiguration.C : 0;")
output.append("\t\tvar h = hRaw < 128 ? CubeConfiguration.D : 0;")
output.append("")
output.append("\t\tvar config = a | b | c | d | e | f | g | h;")
output.append("")
output.append("\t\tswitch ( config )")
output.append("\t\t{")

for i in range(256):
    a = (i & 1) == 1
    b = (i & 2) == 2
    c = (i & 4) == 4
    d = (i & 8) == 8

    e = (i & 16) == 16
    f = (i & 32) == 32
    g = (i & 64) == 64
    h = (i & 128) == 128

    keys: list[str] = []

    if a:
        keys.append("A")
    if b:
        keys.append("B")
    if c:
        keys.append("C")
    if d:
        keys.append("D")

    if e:
        keys.append("E")
    if f:
        keys.append("F")
    if g:
        keys.append("G")
    if h:
        keys.append("H")

    cases = ""

    if len(keys) == 0:
        cases += "CubeConfiguration.None"
    else:
        for key in keys:
            if len(cases) > 0:
                cases += " | "
            cases += f"CubeConfiguration.{key}"
    output.append(f"\t\t\tcase {cases}:")

    output.append("\t\t\t\treturn;")

output.append("\t\t}")
output.append("\t}")
output.append("}")

with open("../libsdf/code/3D/Sdf3DMeshWriter.Generated.cs", "tw", newline="\r\n") as f:
    f.writelines(line + "\n" for line in output)
